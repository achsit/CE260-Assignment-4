import pandas as pd
import matplotlib.pyplot as plt
import os


# Function to read and process the CSV file
def read_csv_file(file_path):
    # Read the CSV file into a DataFrame
    df = pd.read_csv(file_path, delimiter='\t')
   
    # Trim leading and trailing spaces from column names and all string entries
    df.columns = df.columns.str.strip()
    df = df.applymap(lambda x: x.strip() if isinstance(x, str) else x)
   
    # Define the legend for each column
    column_titles = {
        'LOC_ID': 'Location Identifier',
        'Region': 'Federal Aviation Administration Regional Office',
        'APORT_NAME': 'Airport Name',
        'CITY': 'City',
        'STATE': 'State',
        'FAC_TYPE': 'Facility Classification',
        'ATCT_FLAG': 'Air Traffic Control Tower Indicator',
        'HUB_SIZE': 'Hub Size',
        'SYSYEAR': 'System Year',
        'SCENARIO': 'Scenario',
        'AC': 'Air Carrier Operations',
        'COMMUTER': 'Commuter Enplanements',
        'T_ENPL': 'Total Enplanements',
        'ITN_AC': 'Itinerant Air Carrier Enplanements',
        'ITN_AT': 'Itinerant Air Taxi Operations',
        'ATN_GA': 'Itinerant General Aviation Operations',
        'ITN_MIL': 'Itinerant Military Operations',
        'T_ITN': 'Total Itinerant Operations',
        'LOC_GA': 'Local General Aviation Operations',
        'LOC_MIL': 'Local Military Operations',
        'T_LOC': 'Total Local Operations',
        'T_AOPS': 'Total Airport Operations',
        'T_TROPS': 'Total TRACON Operations',
        'TOT_BA': 'Total Based Aircraft'
    }
   
    df.rename(columns=column_titles, inplace=True)
   
    return df


# Function to plot selected columns over the years
def plot_selected_columns_over_years(df, columns_range=(11, 22), year_column='System Year', output_dir='plots'):
    """
    Plots selected columns in the DataFrame over the years and saves each plot as a figure.
    Solid lines are used for years up to 2022, and dotted lines for 2023 onwards.
   
    Parameters:
    df (pd.DataFrame): DataFrame containing the data
    columns_range (tuple): Range of columns to plot (start, end)
    year_column (str): Column name representing the year
    output_dir (str): Directory to save the plots
    """
    # Ensure the output directory exists
    if not os.path.exists(output_dir):
        os.makedirs(output_dir)


    # Get columns based on the specified range
    selected_columns = df.columns[columns_range[0]:columns_range[1]]


    # Convert the year column to a NumPy array for safe indexing
    years = df[year_column].values


    # Iterate over the selected columns in the DataFrame
    for column in selected_columns:
        plt.figure(figsize=(10, 6))
       
        # Convert the column data to a NumPy array for safe plotting
        data = df[column].values


        # Split data into parts before and after 2022
        before_2023_mask = years <= 2022
        from_2023_mask = years > 2022


        # Plot solid line for years up to 2022
        plt.plot(years[before_2023_mask], data[before_2023_mask], label=f'{column} (<= 2022)', linestyle='-')
       
        # Plot dotted line for years from 2023 onwards
        if any(from_2023_mask):
            plt.plot(years[from_2023_mask], data[from_2023_mask], label=f'{column} (2023+)', linestyle='--')
       
        # Formatting the plot
        plt.title(f'{column} Over the Years')
        plt.xlabel('Year')
        plt.ylabel(column)
        plt.legend()
        plt.grid(True)
       
        # Save the plot as a PNG file
        plot_path = os.path.join(output_dir, f'{column}_over_years.png')
        plt.savefig(plot_path)
        plt.close()
   
    print(f"Plots saved in '{output_dir}' directory.")




file_path = 'jfk.csv'
df = read_csv_file(file_path)
plot_selected_columns_over_years(df)
